/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.view;

import com.java.CommonUtils;
import com.java.controller.UpdateEntryController;
import com.java.entity.FileEntity;
import com.java.entity.FileReturnHistory;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 927
 */
public class UpdateEntry extends javax.swing.JFrame {

    private final UpdateEntryController controller;
    private final SimpleDateFormat dateFormat;
    private final DefaultListModel<String> listModel;

    private boolean isFileCompleted = false;
    private boolean isReturnReceived = false;

    /**
     * Creates new form UpdateEntry
     */
    public UpdateEntry() {
        initComponents();
        this.setIconImage(new ImageIcon("images/logo_1.png").getImage());

        controller = new UpdateEntryController();
        dateFormat = new SimpleDateFormat("dd-MM-yyyy hh.mm aa");
        listModel = new DefaultListModel<>();
        list_facilityNo.setModel(listModel);

        cb_process.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                cb_returnReceived.setEnabled(false);
                if (cb_process.getSelectedIndex() == 1 || cb_process.getSelectedIndex() == 4) {
                    cb_returnReceived.setSelectedIndex(2);
                } else {
                    cb_returnReceived.setSelectedIndex(2);
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list_facilityNo = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_facilityNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_returnDetails = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txt_vehicleNo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_comment = new javax.swing.JTextArea();
        btn_clear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        label_facilityNo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        label_vehicleNo = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        label_receivedDateTime = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        label_fileType = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        label_comment = new javax.swing.JLabel();
        btn_update = new javax.swing.JButton();
        cb_process = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cb_returnReceived = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Payment Process");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(750, 720));

        list_facilityNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        list_facilityNo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list_facilityNo.setToolTipText("");
        list_facilityNo.setName(""); // NOI18N
        list_facilityNo.setSelectionForeground(new java.awt.Color(240, 240, 240));
        list_facilityNo.setVisibleRowCount(10);
        jScrollPane3.setViewportView(list_facilityNo);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Payments Process");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Process");
        jLabel9.setFocusable(false);

        txt_facilityNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_facilityNo.setToolTipText("Facility No");
        txt_facilityNo.setNextFocusableComponent(txt_vehicleNo);
        txt_facilityNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_facilityNoActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 200));

        tbl_returnDetails.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbl_returnDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Return Date", "Process", "Comment", "Return Recived Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_returnDetails.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_returnDetails.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_returnDetails.setShowGrid(true);
        tbl_returnDetails.getTableHeader().setReorderingAllowed(false);
        tbl_returnDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_returnDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_returnDetails);
        tbl_returnDetails.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbl_returnDetails.getColumnModel().getColumnCount() > 0) {
            tbl_returnDetails.getColumnModel().getColumn(0).setResizable(false);
            tbl_returnDetails.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbl_returnDetails.getColumnModel().getColumn(1).setResizable(false);
            tbl_returnDetails.getColumnModel().getColumn(1).setPreferredWidth(25);
            tbl_returnDetails.getColumnModel().getColumn(3).setResizable(false);
            tbl_returnDetails.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Comments");
        jLabel10.setFocusable(false);

        txt_vehicleNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_vehicleNo.setToolTipText("Vehicle No");
        txt_vehicleNo.setNextFocusableComponent(cb_process);
        txt_vehicleNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_vehicleNoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Return Received");
        jLabel11.setFocusable(false);

        txt_comment.setColumns(20);
        txt_comment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_comment.setLineWrap(true);
        txt_comment.setRows(3);
        txt_comment.setTabSize(4);
        txt_comment.setNextFocusableComponent(cb_returnReceived);
        jScrollPane2.setViewportView(txt_comment);

        btn_clear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Facility Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel1.setFocusable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Facility No.");
        jLabel4.setFocusable(false);

        label_facilityNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label_facilityNo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Vehicle No.");
        jLabel5.setFocusable(false);

        label_vehicleNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label_vehicleNo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Received Date & Time");
        jLabel6.setFocusable(false);
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        label_receivedDateTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label_receivedDateTime.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("File Type");
        jLabel7.setFocusable(false);

        label_fileType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label_fileType.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Comment");
        jLabel8.setFocusable(false);

        label_comment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label_comment.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_comment, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_fileType, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(label_vehicleNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(label_facilityNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_receivedDateTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_facilityNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_vehicleNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_receivedDateTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_fileType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_comment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_update.setText("Update");
        btn_update.setNextFocusableComponent(txt_facilityNo);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        cb_process.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cb_process.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<--- Select Process --->", "Cheque Completed", "Returned to Admin", "Return to Finance", "CEFT Transfered" }));
        cb_process.setNextFocusableComponent(txt_comment);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Vehicle No.");
        jLabel3.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Facility No.");
        jLabel2.setFocusable(false);

        cb_returnReceived.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cb_returnReceived.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<--- Select --->", "Yes", "No" }));
        cb_returnReceived.setNextFocusableComponent(btn_update);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_facilityNo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(txt_vehicleNo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(147, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_process, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_returnReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(285, 285, 285))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_facilityNo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_vehicleNo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_process, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_returnReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_facilityNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_facilityNoActionPerformed
        String facilityNo = txt_facilityNo.getText().trim();

        // Clear fields
        clearAll();
        txt_facilityNo.setText(facilityNo);

        if (!facilityNo.isEmpty() || CommonUtils.facilityNoValidator(facilityNo)) {
            int i = loadData(facilityNo.toUpperCase());
            if (i == 1) {
                JOptionPane.showMessageDialog(null, "No data found for entered facility number.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter valid facility number.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txt_facilityNoActionPerformed

    private void txt_vehicleNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_vehicleNoActionPerformed
        String vehicleNo = txt_vehicleNo.getText().trim();

        // Clear fields
        clearAll();
        txt_vehicleNo.setText(vehicleNo);

        if (!vehicleNo.isEmpty() || CommonUtils.vehicleNoValidator(vehicleNo)) {
            List<String> list = controller.getDataByVehicleNo(vehicleNo.toUpperCase());

            if (list != null && !list.isEmpty()) {
                for (String facility : list) {
                    listModel.addElement(facility);
                }

                list_facilityNo.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent me) {
                        if (me.getClickCount() == 2) {
                            int i = loadData(list_facilityNo.getSelectedValue());
                            if (i == 1) {
                                JOptionPane.showMessageDialog(null, "Please enter valid vehicle number.", "Warning", JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    }
                });
            } else {
                JOptionPane.showMessageDialog(null, "No data found for entered vehicle number.", "Warning", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please enter valid vehicle number.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txt_vehicleNoActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        if (isFileCompleted) {
            JOptionPane.showMessageDialog(this, "Payments completed for selected facility.", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (!isReturnReceived) {
                if (tbl_returnDetails.getSelectedRow() != -1) {
                    if (tbl_returnDetails.getValueAt(tbl_returnDetails.getSelectedRow(), 3) == null) {
                        //System.out.println("Update");
                        int i = controller.updateFileReturn(label_facilityNo.getText());
                        if (i == 0) {
                            JOptionPane.showMessageDialog(this, "Data not updated successfuly.", "Warning", JOptionPane.WARNING_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Data updated successfuly.", "Success", JOptionPane.INFORMATION_MESSAGE);
                        }
                        isReturnReceived = true;
                        afterSave();
                    } else {
                        JOptionPane.showMessageDialog(this, "Already received the returned file.", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please select last returned data to update.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                if (cb_process.getSelectedIndex() != 0 && cb_returnReceived.getSelectedIndex() == 2) {
                    //System.out.println("New return entry save");
                    Timestamp time = null;
                    FileReturnHistory history = new FileReturnHistory(label_facilityNo.getText(), cb_process.getSelectedIndex(),
                        txt_comment.getText());
                    if (cb_process.getSelectedIndex() == 1 || cb_process.getSelectedIndex() == 4) {
                        isFileCompleted = true;
                        time = Timestamp.valueOf(LocalDateTime.now());
                    } else {
                        isReturnReceived = false;
                    }
                    int i = controller.insertReturnRecord(history, time);
                    if (i == 0) {
                        JOptionPane.showMessageDialog(this, "Data not saved successfuly.", "Warning", JOptionPane.WARNING_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Data saved successfuly.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }
                    afterSave();
                } else {
                    JOptionPane.showMessageDialog(this, "Process & Comment is mandatory to update.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clearAll();
    }//GEN-LAST:event_btn_clearActionPerformed

  private void tbl_returnDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_returnDetailsMouseClicked
      DefaultTableModel model = (DefaultTableModel) tbl_returnDetails.getModel();

      if (evt.getClickCount() == 2) {
          if (model.getValueAt(tbl_returnDetails.getSelectedRow(), 1).equals(CommonUtils.selectProcess(1))
                  || model.getValueAt(tbl_returnDetails.getSelectedRow(), 1).equals(CommonUtils.selectProcess(4))) {
              cb_process.setEnabled(false);
              txt_comment.setEnabled(false);
              cb_returnReceived.setEnabled(false);
              cb_process.setSelectedItem(model.getValueAt(tbl_returnDetails.getSelectedRow(), 1));
              txt_comment.setText(model.getValueAt(tbl_returnDetails.getSelectedRow(), 2).toString());
          } else {
              cb_process.setEnabled(false);
              txt_comment.setEnabled(false);
              cb_process.setSelectedItem(model.getValueAt(tbl_returnDetails.getSelectedRow(), 1));
              txt_comment.setText(model.getValueAt(tbl_returnDetails.getSelectedRow(), 2).toString());
              if (model.getValueAt(tbl_returnDetails.getSelectedRow(), 3) == null) {
                  cb_returnReceived.setSelectedIndex(1);
                  cb_returnReceived.setEnabled(false);
              } else {
                  cb_returnReceived.setEnabled(false);
                  cb_returnReceived.setSelectedIndex(1);
              }
          }
      }
  }//GEN-LAST:event_tbl_returnDetailsMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cb_process;
    private javax.swing.JComboBox<String> cb_returnReceived;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label_comment;
    private javax.swing.JLabel label_facilityNo;
    private javax.swing.JLabel label_fileType;
    private javax.swing.JLabel label_receivedDateTime;
    private javax.swing.JLabel label_vehicleNo;
    private javax.swing.JList<String> list_facilityNo;
    private javax.swing.JTable tbl_returnDetails;
    private javax.swing.JTextArea txt_comment;
    private javax.swing.JTextField txt_facilityNo;
    private javax.swing.JTextField txt_vehicleNo;
    // End of variables declaration//GEN-END:variables

    public void loadReturnHistoryToTable(List<FileReturnHistory> records) {
        DefaultTableModel tablMmodel = (DefaultTableModel) tbl_returnDetails.getModel();
        for (FileReturnHistory file : records) {
            String date = file.getReceivedDateTime() != null ? dateFormat.format(file.getReceivedDateTime()) : null;
            Object[] object = {dateFormat.format(file.getReturnedDateTime()), CommonUtils.selectProcess(file.getProcess()),
                file.getUpdatedComment(), date};
            tablMmodel.addRow(object);
        }
    }

    private void clearAll() {
        txt_facilityNo.setText("");
        txt_vehicleNo.setText("");
        label_facilityNo.setText("");
        label_vehicleNo.setText("");
        label_comment.setText("");
        label_fileType.setText("");
        label_receivedDateTime.setText("");
        cb_process.setSelectedIndex(0);
        cb_process.setEnabled(true);
        txt_comment.setText("");
        txt_comment.setEnabled(true);
        cb_returnReceived.setSelectedIndex(0);
        DefaultListModel model = (DefaultListModel) list_facilityNo.getModel();
        model.removeAllElements();
        clearTable();
        
        isFileCompleted = false;
        isReturnReceived = false;
    }

    private void clearTable() {
        DefaultTableModel tablMmodel = (DefaultTableModel) tbl_returnDetails.getModel();
        while (tablMmodel.getRowCount() > 0) {
            tablMmodel.removeRow(0);
        }
    }

    private int loadData(String facilityNo) {
        FileEntity data = controller.getDataByFacilityNo(facilityNo);
        if (data != null) {
            label_facilityNo.setText(data.getFacilityNo());
            label_vehicleNo.setText(data.getVehicleNo());
            label_receivedDateTime.setText(dateFormat.format(data.getDateTime()));
            label_fileType.setText(CommonUtils.selectFileType(data.getFileType()));
            label_comment.setText(CommonUtils.selectComment(data.getComment()));

            clearTable();
            loadReturnHistoryToTable(data.getReturnHistory());

            // check for file complete record
            if (!data.getReturnHistory().isEmpty()) {
                for (FileReturnHistory list : data.getReturnHistory()) {
                    if (list.getProcess() == 1 || list.getProcess() == 4) {
                        isFileCompleted = true;
                    } else {
                        isFileCompleted = false;
                        if (list.getReceivedDateTime() == null) {
                            isReturnReceived = false;
                        } else {
                            isReturnReceived = true;
                        }
                    }
                }
            } else {
                isReturnReceived = true;
            }
        } else {
            return 1;
        }
        return 0;
    }

    private void afterSave() {
        clearTable();
        loadReturnHistoryToTable(controller.getReturnHistoryData(label_facilityNo.getText()));
        cb_process.setSelectedIndex(0);
        cb_process.setEnabled(true);
        txt_comment.setEnabled(true);
        txt_comment.setText("");
        cb_returnReceived.setEnabled(true);
        cb_returnReceived.setSelectedIndex(2);
    }

}
